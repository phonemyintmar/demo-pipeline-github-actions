name: Development_pipeline

on:
  push:
    paths:
      - '.github/workflows/development_pipeline.yml'
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write
      
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      # - name: Build with Maven
      #   run: mvn -B package --file pom.xml    
        
      # - name: Run Unit Tests
      #   run: mvn test --file pom.xml

      # - name: Snyk setup
      #   run: |
      #     npm install -g snyk
      #     chmod +x mvnw
      #     snyk auth ${{ secrets.SNYK_TOKEN}}
      
      # - name: Snyk Security Scan
      #   run: snyk test --all-projects

      # - name: Initialize CodeQL
      #   uses: github/codeql-action/init@v2
      #   with:
      #     languages: java

      # - name: Build the project
      #   run: ./mvnw clean package

      # - name: Perform CodeQL Analysis
      #   uses: github/codeql-action/analyze@v2
      
      
      # - name: Publish to Nexus
      #   run: |
      #     echo "Deploy to nexus or jfrog (repository managers)"
      #     echo "This step is skipped for now"
      #     # mvn deploy --file pom.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Docker Build and Push
        run: |
          export DOCKER_BUILDKIT=0
          export COMPOSE_DOCKER_CLI_BUILD=0
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/demo-app .
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/demo-app



  notifications:
    runs-on: ubuntu-latest
    needs: build
    if: failure()

    steps:
      - name: Send Telegram Notification
        run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="The workflow for Development_pipeline of ${GITHUB_REPOSITORY} has failed. Please check the logs for details."
