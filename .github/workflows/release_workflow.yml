name: Release workflow

on:
  push:
    # branches:
    #   - main
    paths:
      - '.github/workflows/release_workflow.yml'

jobs:
  on-release:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml    
        
      - name: Run Unit Tests
        run: mvn test --file pom.xml

      - name: Snyk setup
        run: |
          npm install -g snyk
          chmod +x mvnw
          snyk auth ${{ secrets.SNYK_TOKEN}}
      
      - name: Snyk Security Scan
        run: snyk test --all-projects

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Build the project
        run: ./mvnw clean package

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
      
      
      - name: Publish to Nexus
        run: |
          echo "Deploy to nexus or jfrog (repository managers)"
          echo "This step is skipped for now"
          # mvn deploy --file pom.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Docker Build and Push
        run: |
          export DOCKER_BUILDKIT=0
          export COMPOSE_DOCKER_CLI_BUILD=0
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/demo-app .
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/demo-app

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Fetch all branches
        run: git fetch --all

      - name: Merge main to develop
        id: merge
        run: |
          git checkout test-develop
          git merge origin/main --allow-unrelated-histories
        continue-on-error: true

      - name: Push changes
        if: steps.merge.outcome == 'success'
        run: |
          git push origin test-develop

      - name: Send Telegram message on failure
        if: steps.merge.outcome == 'failure' 
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="Merge from main to develop branch of $GITHUB_REPOSITORY failed. Manual intervention required."

  notifications:
    runs-on: ubuntu-latest
    needs: on-release
    if: failure()

    steps:
      - name: Send Telegram Notification
        run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="The workflow for release of ${GITHUB_REPOSITORY} has failed. Please check the logs for details."
